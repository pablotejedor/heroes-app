{"version":3,"sources":["components/login/Login.jsx","components/HeroCard.jsx","components/Search.jsx","components/HeroCardTeam.jsx","components/MyTeam.jsx","components/Home.jsx","components/Routers/ProtectedRoute.jsx","components/Routers/AppRouter.jsx","App.js","index.js"],"names":["Login","history","useState","serverError","setServerError","handleSubmit","values","a","axios","method","url","data","email","password","response","localStorage","setItem","token","replace","onSubmit","validate","errors","test","initialValues","isValid","touched","className","htmlFor","type","id","name","disabled","HeroCard","hero","setHeroTeam","backgroundImage","backgroundColor","good","bad","biography","alignment","style","src","image","alt","onClick","member","Search","search","setSearch","value","results","placeholder","map","HeroCardTeam","console","log","MyTeam","heroTeam","Home","ProtectedRoute","Component","component","restOfProps","isAuthenticated","getItem","render","props","to","AppRouter","exact","path","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df2f3775.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport axios from 'axios';\n\nconst Login = ({ history }) => {\n  const [serverError, setServerError] = useState(null);\n  const handleSubmit = async values => {\n    try {\n      const response = await axios({\n        method: 'POST',\n        url: 'http://challenge-react.alkemy.org',\n        data: {\n          email: values.email,\n          password: values.password,\n        },\n      });\n      localStorage.setItem('token', response.data.token);\n      history.replace('/');\n    } catch (error) {\n      setServerError('Invalid credentials');\n    }\n  };\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n\n        if (!values.password) {\n          errors.password = 'Required';\n        }\n        return errors;\n      }}\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n    >\n      {({ errors, isValid, touched }) => (\n        <Form>\n          <div className=\"mb-3\">\n            <label htmlFor=\"inputEmail\" className=\"form-label\">\n              Email\n            </label>\n            <Field\n              type=\"email\"\n              className=\"form-control\"\n              id=\"inputEmail\"\n              name=\"email\"\n              // autoComplete=\"off\"\n            />\n            {errors.email && touched.email ? (\n              <div className=\"text-danger\">{errors.email}</div>\n            ) : null}\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"inputPassword\" className=\"form-label\">\n              Password\n            </label>\n            <Field\n              type=\"password\"\n              className=\"form-control\"\n              id=\"inputPassword\"\n              name=\"password\"\n            />\n            {errors.password && touched.password ? (\n              <div className=\"text-danger\">{errors.password}</div>\n            ) : null}\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={!isValid}>\n            Enviar\n          </button>\n          {serverError ? (\n            <div className=\"text-danger\">{serverError}</div>\n          ) : null}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nexport const HeroCard = ({ hero, setHeroTeam }) => {\n  const colors = {\n    good: '#236494',\n    bad: '#b61617',\n  };\n  const backgroundImage = {\n    backgroundColor: `${colors[hero.biography.alignment]}`,\n  };\n\n  return (\n    <div\n      className=\"card ms-3 animate__animated animate__fadeIn m-5\"\n      style={backgroundImage}\n    >\n      <div className=\"row no-gutters\">\n        <div className=\"col-md-4\">\n          <img src={hero.image.url} className=\"card-img\" alt={hero.id} />\n        </div>\n        <div className=\"col-md-8\">\n          <h5> {hero.name} </h5>\n          <button\n            onClick={() => setHeroTeam(member => [hero, ...member])}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add to my team\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport axios from 'axios';\nimport { HeroCard } from './HeroCard';\n\nexport const Search = ({ setHeroTeam }) => {\n  const [serverError, setServerError] = useState(null);\n  const [search, setSearch] = useState([]);\n  const handleSubmit = async value => {\n    try {\n      const response = await axios({\n        method: 'GET',\n        url: `https://cors-anywhere.herokuapp.com/https://superheroapi.com/api/380601706991561/search/${value.search}`,\n        data: {\n          search: value.search,\n        },\n      });\n      setSearch(response.data.results);\n    } catch (error) {\n      setServerError('No such hero with that name');\n    }\n  };\n  return (\n    <div className=\"mt-5\">\n      <div>\n        <div className=\"row\">\n          <div className=\"col-5\">\n            <h4>Search:</h4>\n            <hr />\n            <Formik\n              onSubmit={handleSubmit}\n              validate={value => {\n                const errors = {};\n                if (!value.search) {\n                  errors.search = 'Required';\n                }\n                //  else if (!/^[a-zA-Z]+$/.test(value.search)) {\n                //   errors.search = 'Please enter a valid input';\n                // }\n\n                return errors;\n              }}\n              initialValues={{\n                search: '',\n              }}\n            >\n              {({ errors, isValid, touched }) => (\n                <Form>\n                  <div className=\"mb-3\">\n                    <Field\n                      type=\"search\"\n                      className=\"form-control\"\n                      //   id=\"inputsearch\"\n                      name=\"search\"\n                      placeholder=\"Search a hero by name\"\n                    />\n                    {errors.search && touched.search ? (\n                      <div className=\"text-danger\">{errors.search}</div>\n                    ) : null}\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    disabled={!isValid}\n                  >\n                    Search\n                  </button>\n                  {serverError ? (\n                    <div className=\"text-danger\">{serverError}</div>\n                  ) : null}\n                </Form>\n              )}\n            </Formik>\n          </div>\n\n          <div className=\"col-7\">\n            <h4> Results </h4>\n            <hr />\n            <div className=\"card\">\n              {search ? (\n                search.map(hero => (\n                  <HeroCard key={hero.id} hero={hero} setHeroTeam={setHeroTeam} />\n                ))\n              ) : (\n                <p className=\"text-danger\">\n                  No results. Please enter a valid name\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const HeroCardTeam = ({ hero }) => {\n  console.log(hero);\n\n  return (\n    <div\n      className=\"card ms-3 animate__animated animate__fadeIn m-5\"\n      //   style={backgroundImage}\n    >\n      <div className=\"row no-gutters\">\n        <div className=\"col-md-4\">\n          <img src={hero.image.url} className=\"card-img\" alt={hero.id} />\n        </div>\n        <div className=\"col-md-8\">\n          <h2> {hero.name} </h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { HeroCardTeam } from './HeroCardTeam';\nexport const MyTeam = ({ heroTeam }) => {\n  console.log(heroTeam);\n  return (\n    <div>\n      <h1>MyTeam</h1>\n      {heroTeam.map(hero => (\n        <HeroCardTeam hero={hero} key={hero.id} />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Search } from './Search';\nimport { MyTeam } from './MyTeam';\nexport const Home = () => {\n  const [heroTeam, setHeroTeam] = useState([]);\n  return (\n    <>\n      <Search setHeroTeam={setHeroTeam} />\n      <MyTeam heroTeam={heroTeam} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\n  const isAuthenticated = localStorage.getItem(\"token\");\n  return (\n    <Route\n      {...restOfProps}\n      render={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Login from '../login/Login';\nimport { Home } from '../Home';\nimport ProtectedRoute from './ProtectedRoute';\n\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <ProtectedRoute exact path='/' component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n","import './App.css'\nimport React from 'react';\nimport { AppRouter } from './components/Routers/AppRouter';\nfunction App() {\n  return (\n    <div className=\"container\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}