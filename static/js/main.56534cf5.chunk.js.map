{"version":3,"sources":["components/login/Login.jsx","components/HeroCard.jsx","components/Search.jsx","components/HeroCardTeam.jsx","components/MyTeam.jsx","components/Home.jsx","components/Routers/ProtectedRoute.jsx","components/Routers/AppRouter.jsx","App.js","index.js"],"names":["Login","history","useState","serverError","setServerError","handleSubmit","values","a","axios","method","url","data","email","password","response","localStorage","setItem","token","replace","onSubmit","validate","errors","test","initialValues","isValid","touched","className","htmlFor","type","id","name","disabled","HeroCard","hero","heroTeam","setHeroTeam","backgroundImage","backgroundColor","good","bad","biography","alignment","width","style","src","image","alt","onClick","length","alert","Search","search","setSearch","value","results","placeholder","map","HeroCardTeam","console","log","place","effect","powerstats","combat","durability","intelligence","power","speed","strength","appearance","weight","height","aliases","alias","join","work","base","MyTeam","Home","ProtectedRoute","Component","component","restOfProps","isAuthenticated","getItem","render","props","to","AppRouter","exact","path","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56534cf5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport axios from 'axios';\n\nconst Login = ({ history }) => {\n  const [serverError, setServerError] = useState(null);\n  const handleSubmit = async values => {\n    try {\n      const response = await axios({\n        method: 'POST',\n        url: 'http://challenge-react.alkemy.org',\n        data: {\n          email: values.email,\n          password: values.password,\n        },\n      });\n      localStorage.setItem('token', response.data.token);\n      history.replace('/');\n    } catch (error) {\n      setServerError('Invalid credentials');\n    }\n  };\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n\n        if (!values.password) {\n          errors.password = 'Required';\n        }\n        return errors;\n      }}\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n    >\n      {({ errors, isValid, touched }) => (\n        <Form>\n          <div className=\"mb-3\">\n            <label htmlFor=\"inputEmail\" className=\"form-label\">\n              Email\n            </label>\n            <Field\n              type=\"email\"\n              className=\"form-control\"\n              id=\"inputEmail\"\n              name=\"email\"\n              // autoComplete=\"off\"\n            />\n            {errors.email && touched.email ? (\n              <div className=\"text-danger\">{errors.email}</div>\n            ) : null}\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"inputPassword\" className=\"form-label\">\n              Password\n            </label>\n            <Field\n              type=\"password\"\n              className=\"form-control\"\n              id=\"inputPassword\"\n              name=\"password\"\n            />\n            {errors.password && touched.password ? (\n              <div className=\"text-danger\">{errors.password}</div>\n            ) : null}\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={!isValid}>\n            Enviar\n          </button>\n          {serverError ? (\n            <div className=\"text-danger\">{serverError}</div>\n          ) : null}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nexport const HeroCard = ({ hero, heroTeam, setHeroTeam }) => {\n  const colors = {\n    good: '#236494',\n    bad: '#b61617',\n  };\n  const backgroundImage = {\n    backgroundColor: `${colors[hero.biography.alignment]}`,\n    width: '10rem',\n  };\n  return (\n    <div className=\"card m-1 text-center\" style={backgroundImage}>\n      <img className=\"card-img-top col-5\" src={hero.image.url} alt={hero.id} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{hero.name}</h5>\n        <button\n          onClick={() => {\n            if (heroTeam.length > 5) {\n              alert('Your team must have six members');\n            } else {\n              setHeroTeam(heroTeam => [hero, ...heroTeam]);\n            }\n          }}\n          type=\"button\"\n          className=\"btn btn-dark\"\n        >\n          Add to my team\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport axios from 'axios';\nimport { HeroCard } from './HeroCard';\n\nexport const Search = ({ heroTeam, setHeroTeam }) => {\n  const [serverError, setServerError] = useState(null);\n  const [search, setSearch] = useState([]);\n  const handleSubmit = async value => {\n    try {\n      const response = await axios({\n        method: 'GET',\n        url: `https://cors-anywhere.herokuapp.com/https://superheroapi.com/api/380601706991561/search/${value.search}`,\n        data: {\n          search: value.search,\n        },\n      });\n      setSearch(response.data.results);\n    } catch (error) {\n      setServerError('No such hero with that name');\n    }\n  };\n  return (\n    <div className=\"mt-5\">\n      <div>\n        <div className=\"row\">\n          <div>\n            <h4>Search:</h4>\n            <hr />\n            <Formik\n              onSubmit={handleSubmit}\n              validate={value => {\n                const errors = {};\n                if (!value.search) {\n                  errors.search = 'Required';\n                }\n                //  else if (!/^[a-zA-Z]+$/.test(value.search)) {\n                //   errors.search = 'Please enter a valid input';\n                // }\n\n                return errors;\n              }}\n              initialValues={{\n                search: '',\n              }}\n            >\n              {({ errors, isValid, touched }) => (\n                <Form>\n                  <div className=\"d-flex m-3\">\n                    <Field\n                      type=\"search\"\n                      className=\"form-control m-1\"\n                      //   id=\"inputsearch\"\n                      name=\"search\"\n                      placeholder=\"Search a hero by name\"\n                    />\n                    {errors.search && touched.search ? (\n                      <div className=\"text-danger\">{errors.search}</div>\n                    ) : null}\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-1\"\n                      disabled={!isValid}\n                    >\n                      Search\n                    </button>\n                  </div>\n                  {serverError ? (\n                    <div className=\"text-danger\">{serverError}</div>\n                  ) : null}\n                </Form>\n              )}\n            </Formik>\n            <div className=\"d-flex flex-wrap m-3\">\n              {search ? (\n                search.map(hero => (\n                  <HeroCard\n                    className=\"card m-3\"\n                    key={hero.id}\n                    hero={hero}\n                    setHeroTeam={setHeroTeam}\n                    heroTeam={heroTeam}\n                  />\n                ))\n              ) : (\n                <p className=\"text-danger\">\n                  No results. Please enter a valid name\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\nexport const HeroCardTeam = ({ hero }) => {\n  const colors = {\n    good: '#236494',\n    bad: '#b61617',\n  };\n  const backgroundImage = {\n    backgroundColor: `${colors[hero.biography.alignment]}`,\n    width: '10rem',\n  };\n  console.log(hero);\n  return (\n    <div className=\"m-3 text-center\" style={backgroundImage}>\n      <img className=\"card-img-top\" src={hero.image.url} alt={hero.id} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{hero.name}</h5>\n        <div className=\"d-flex flex-column\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success m-1\"\n            data-tip=\"attributes\"\n            data-for={hero.name}\n          >\n            Attributes\n          </button>\n\n          <ReactTooltip\n            id={hero.name}\n            place=\"top\"\n            type=\"success\"\n            effect=\"solid\"\n          >\n            Combat: {hero.powerstats.combat}\n            <br />\n            Durability: {hero.powerstats.durability}\n            <br />\n            Intelligence: {hero.powerstats.intelligence}\n            <br />\n            Power: {hero.powerstats.power}\n            <br />\n            Speed: {hero.powerstats.speed}\n            <br />\n            Strength: {hero.powerstats.strength}\n          </ReactTooltip>\n          <button\n            type=\"button\"\n            className=\"btn btn-success m-1\"\n            data-tip=\"info\"\n            data-for={hero.id}\n            data-multiline=\"true\"\n            id={hero.id}\n          >\n            Info\n          </button>\n          <ReactTooltip\n            id={hero.id}\n            place=\"top\"\n            type=\"success\"\n            effect=\"solid\"\n          >\n            Weight: {hero.appearance.weight[1]}\n            <br />\n            Height: {hero.appearance.height[1]}\n            <br />\n            Name: {hero.biography['full-name']}\n            <br />\n            Aliases: {hero.biography.aliases.map(alias => alias).join(', ')}\n            <br />\n            Eye color: {hero.appearance['eye-color']}\n            <br />\n            Hair color: {hero.appearance['hair-color']}\n            <br />\n            Place of work: {hero.work.base}\n          </ReactTooltip>\n          <button type=\"button\" className=\"btn btn-danger m-1\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { HeroCardTeam } from './HeroCardTeam';\nexport const MyTeam = ({ heroTeam }) => {\n  return (\n    <div className=\"d-flex mx-5\">\n      {heroTeam.map(hero => (\n        <HeroCardTeam hero={hero} key={hero.id} />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Search } from './Search';\nimport { MyTeam } from './MyTeam';\nexport const Home = () => {\n  const [heroTeam, setHeroTeam] = useState([]);\n  return (\n    <>\n      <Search setHeroTeam={setHeroTeam} heroTeam={heroTeam} />\n      <h1>My team</h1>\n      <MyTeam heroTeam={heroTeam} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\n  const isAuthenticated = localStorage.getItem(\"token\");\n  return (\n    <Route\n      {...restOfProps}\n      render={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Login from '../login/Login';\nimport { Home } from '../Home';\nimport ProtectedRoute from './ProtectedRoute';\n\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <ProtectedRoute exact path='/' component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n","import './App.css'\nimport React from 'react';\nimport { AppRouter } from './components/Routers/AppRouter';\nfunction App() {\n  return (\n    <div className=\"container\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}