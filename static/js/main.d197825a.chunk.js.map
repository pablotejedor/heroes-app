{"version":3,"sources":["components/login/Login.jsx","components/HeroCard.jsx","components/Search.jsx","components/HeroCardTeam.jsx","components/MyTeam.jsx","components/helpers/getOverallStats.js","components/helpers/getAverageHeight.js","components/helpers/getAverageWeight.js","components/Home.jsx","components/Routers/ProtectedRoute.jsx","components/Routers/AppRouter.jsx","App.js","index.js"],"names":["Login","history","useState","serverError","setServerError","handleSubmit","values","a","axios","method","url","data","email","password","response","localStorage","setItem","token","replace","onSubmit","validate","errors","test","initialValues","isValid","touched","className","htmlFor","type","id","name","disabled","HeroCard","hero","heroTeam","setHeroTeam","goodGuysCount","filter","selectedHero","biography","alignment","length","badGuysCount","backgroundImage","backgroundColor","good","bad","width","style","src","image","alt","onClick","some","alert","Search","search","setSearch","value","results","placeholder","autoComplete","map","HeroCardTeam","place","effect","parseInt","powerstats","combat","durability","intelligence","power","speed","strength","appearance","weight","height","aliases","alias","join","work","base","filteredList","element","MyTeam","overallStats","overallCombat","overallDurability","overallIntelligence","overallPower","overallSpeed","overallStrength","i","stat","color","sort","b","getOverallStats","averageHeight","totalHeight","Math","floor","getAverageHeight","averageWeight","totalWeight","getAverageWeight","Home","ProtectedRoute","Component","component","restOfProps","isAuthenticated","getItem","render","props","to","AppRouter","exact","path","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d197825a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport axios from 'axios';\n\nconst Login = ({ history }) => {\n  const [serverError, setServerError] = useState(null);\n  const handleSubmit = async values => {\n    try {\n      const response = await axios({\n        method: 'POST',\n        url: 'http://challenge-react.alkemy.org',\n        data: {\n          email: values.email,\n          password: values.password,\n        },\n      });\n      localStorage.setItem('token', response.data.token);\n      history.replace('/');\n    } catch (error) {\n      setServerError('Invalid credentials');\n    }\n  };\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n\n        if (!values.password) {\n          errors.password = 'Required';\n        }\n        return errors;\n      }}\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n    >\n      {({ errors, isValid, touched }) => (\n        <Form>\n          <div className=\"mb-3\">\n            <label htmlFor=\"inputEmail\" className=\"form-label\">\n              Email\n            </label>\n            <Field\n              type=\"email\"\n              className=\"form-control\"\n              id=\"inputEmail\"\n              name=\"email\"\n              // autoComplete=\"off\"\n            />\n            {errors.email && touched.email ? (\n              <div className=\"text-danger\">{errors.email}</div>\n            ) : null}\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"inputPassword\" className=\"form-label\">\n              Password\n            </label>\n            <Field\n              type=\"password\"\n              className=\"form-control\"\n              id=\"inputPassword\"\n              name=\"password\"\n            />\n            {errors.password && touched.password ? (\n              <div className=\"text-danger\">{errors.password}</div>\n            ) : null}\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={!isValid}>\n            Enviar\n          </button>\n          {serverError ? (\n            <div className=\"text-danger\">{serverError}</div>\n          ) : null}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nexport const HeroCard = ({ hero, heroTeam, setHeroTeam }) => {\n  const goodGuysCount = heroTeam.filter(selectedHero => selectedHero.biography.alignment === 'good').length;\n  const badGuysCount = heroTeam.filter(selectedHero => selectedHero.biography.alignment === 'bad').length;\n\n  const colors = {\n    good: '#236494',\n    bad: '#b61617',\n  };\n  const backgroundImage = {\n    backgroundColor: colors[hero.biography.alignment],\n    width: '13rem',\n  };\n  return (\n    <div\n      className=\"card m-1 text-center animate__animated animate__fadeIn border\"\n      style={backgroundImage}\n    >\n      <img className=\"card-img-top col-5\" src={hero.image.url} alt={hero.id} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{hero.name}</h5>\n        <button\n          onClick={() => {\n            if (heroTeam.some(selectedHero => selectedHero.id === hero.id)) {\n              alert('This hero already exist in your team');\n            } else if (heroTeam.length > 5) {\n              alert('Your team must have six members');\n            } else if (goodGuysCount === 3 && hero.biography.alignment === 'good') {\n              alert('Maximum three good guys');\n            } else if (badGuysCount === 3 && hero.biography.alignment === 'bad') {\n              alert('Maximum three bad guys');\n            } else if (\n              hero.biography.alignment === 'neutral' ||\n              hero.biography.alignment === '-'\n            ) {\n              alert('No neutral heroes allowed');\n            } else {\n              setHeroTeam(heroTeam => [...heroTeam, hero]);\n            }\n          }}\n          type=\"button\"\n          className=\"btn btn-light border\"\n        >\n          Add to my team\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport axios from 'axios';\nimport { HeroCard } from './HeroCard';\n\nexport const Search = ({ heroTeam, setHeroTeam }) => {\n  const [serverError, setServerError] = useState(null);\n  const [search, setSearch] = useState([]);\n  const handleSubmit = async value => {\n    try {\n      const response = await axios({\n        method: 'GET',\n        url: `https://cors-anywhere.herokuapp.com/https://superheroapi.com/api/380601706991561/search/${value.search}`,\n        data: {\n          search: value.search,\n        },\n      });\n      setSearch(response.data.results);\n    } catch (error) {\n      setServerError('No such hero with that name');\n    }\n  };\n  return (\n    <div className=\"m-5\">\n      <div>\n        <div className=\"row\">\n          <div>\n            <h4>Search:</h4>\n            <hr />\n            <Formik\n              onSubmit={handleSubmit}\n              validate={value => {\n                const errors = {};\n                if (!value.search) {\n                  errors.search = 'Required';\n                }\n                return errors;\n              }}\n              initialValues={{\n                search: '',\n              }}\n            >\n              {({ errors, isValid, touched }) => (\n                <Form>\n                  <div className=\"d-flex m-3 align-items-center\">\n                    <Field\n                      type=\"search\"\n                      className=\"form-control m-1\"\n                      name=\"search\"\n                      placeholder=\"Search a hero by name\"\n                      autoComplete='off'\n                    />\n                    {errors.search && touched.search ? (\n                      <div className=\"text-danger\">{errors.search}</div>\n                    ) : null}\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary m-1\"\n                      disabled={!isValid}\n                    >\n                      Search\n                    </button>\n                  </div>\n                  {serverError ? (\n                    <div className=\"text-danger\">{serverError}</div>\n                  ) : null}\n                </Form>\n              )}\n            </Formik>\n            <div className=\"d-flex flex-wrap m-3\">\n              {search ? (\n                search.map(hero => (\n                  <HeroCard\n                    className=\"card m-3\"\n                    key={hero.id}\n                    hero={hero}\n                    setHeroTeam={setHeroTeam}\n                    heroTeam={heroTeam}\n                  />\n                ))\n              ) : (\n                <p className=\"text-danger\">\n                  No results. Please enter a valid name\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\nexport const HeroCardTeam = ({ hero, heroTeam, setHeroTeam }) => {\n  const colors = {\n    good: '#236494',\n    bad: '#b61617',\n  };\n  const backgroundImage = {\n    backgroundColor: `${colors[hero.biography.alignment]}`,\n    width: '14rem'\n  };\n\n  const deleteHero = () => {\n    const filteredList = heroTeam.filter(element => element.id !== hero.id);\n    setHeroTeam(filteredList);\n  };\n  \n  return (\n    <div className=\"m-3 text-center rounded border\" style={backgroundImage}>\n      <img className=\"card-img-top\" src={hero.image.url} alt={hero.id} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{hero.name}</h5>\n        <div className=\"d-flex flex-column space-between\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success m-1\"\n            data-tip=\"attributes\"\n            data-for={hero.name + hero.id}\n          >\n            Attributes\n          </button>\n\n          <ReactTooltip\n            id={hero.name + hero.id}\n            place=\"top\"\n            type=\"success\"\n            effect=\"solid\"\n          >\n            Combat: {parseInt(hero.powerstats.combat) || '-'}\n            <br />\n            Durability: {parseInt(hero.powerstats.durability) || '-'}\n            <br />\n            Intelligence: {parseInt(hero.powerstats.intelligence) || '-'}\n            <br />\n            Power: {parseInt(hero.powerstats.power) || '-'}\n            <br />\n            Speed: {parseInt(hero.powerstats.speed) || '-'}\n            <br />\n            Strength: {parseInt(hero.powerstats.strength) || '-'}\n          </ReactTooltip>\n          <button\n            type=\"button\"\n            className=\"btn btn-success m-1\"\n            data-tip=\"info\"\n            data-for={hero.id}\n            data-multiline=\"true\"\n            id={hero.id}\n          >\n            Info\n          </button>\n          <ReactTooltip id={hero.id} place=\"top\" type=\"success\" effect=\"solid\">\n            Weight: {hero.appearance.weight[1]}\n            <br />\n            Height: {hero.appearance.height[1]}\n            <br />\n            Name: {hero.biography['full-name']}\n            <br />\n            Aliases: {hero.biography.aliases.map(alias => alias).join(', ')}\n            <br />\n            Eye color: {hero.appearance['eye-color']}\n            <br />\n            Hair color: {hero.appearance['hair-color']}\n            <br />\n            Place of work: {hero.work.base}\n          </ReactTooltip>\n          <button\n            onClick={deleteHero}\n            type=\"button\"\n            className=\"btn btn-danger m-1\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { HeroCardTeam } from './HeroCardTeam';\nimport { getOverallStats } from './helpers/getOverallStats';\nimport { getAverageHeight } from './helpers/getAverageHeight';\nimport { getAverageWeight } from './helpers/getAverageWeight';\nexport const MyTeam = ({ heroTeam, setHeroTeam }) => {\n  let overallStats = getOverallStats(heroTeam);\n  let averageHeight = getAverageHeight(heroTeam);\n  let averageWeight = getAverageWeight(heroTeam);\n\n  return (\n    <div className=\"m-2\">\n      <h1>My team</h1>\n      <div className=\"d-flex text-center align-items-center\">\n        <div className=\"m-2 p-2 border rounded\">\n          <h4>Overall Stats:</h4>\n          <div className=\"d-flex flex-wrap\">\n            {overallStats.map(stat => (\n              <h5\n                className={`m-1 p-2 border rounded ${stat.color} align-items-center`}\n                key={stat.stat}\n                style={{width: '6em'}}\n              >\n                {stat.stat}: {stat.value || '---'}\n              </h5>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"m-2 p-2 border rounded\">\n          <div className=\"d-flex flex-column\">\n            <h5 className=\"m-1 p-1 border rounded bg-secondary\">\n             Avg Height: {averageHeight || '---'} cm\n            </h5>\n            <h5 className=\"m-1 p-1 border rounded bg-secondary\">\n             Avg Weight: {averageWeight || '---'} kg\n            </h5>\n          </div>\n        </div>\n      </div>\n\n      {!heroTeam.length ? (\n        <p className=\"text-danger\">\n          Your team will be shown here. At this moment, your team does not contain any hero. Please use the search feature to\n          get you a hero for your team.\n        </p>\n      ) : null}\n\n      <div className=\"d-flex flex-wrap\">\n        {heroTeam.map(hero => (\n          <HeroCardTeam\n            hero={hero}\n            heroTeam={heroTeam}\n            setHeroTeam={setHeroTeam}\n            key={hero.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","export const getOverallStats = heroTeam => {\n  let overallCombat = 0;\n  let overallDurability = 0;\n  let overallIntelligence = 0;\n  let overallPower = 0;\n  let overallSpeed = 0;\n  let overallStrength = 0;\n\n  for (let i = 0; i < heroTeam.length; i++) {\n    overallCombat += parseInt(heroTeam[i].powerstats.combat) || 0;\n    overallDurability += parseInt(heroTeam[i].powerstats.durability) || 0;\n    overallIntelligence += parseInt(heroTeam[i].powerstats.intelligence) || 0;\n    overallPower += parseInt(heroTeam[i].powerstats.power) || 0;\n    overallSpeed += parseInt(heroTeam[i].powerstats.speed) || 0;\n    overallStrength += parseInt(heroTeam[i].powerstats.strength) || 0;\n  }\n  const totalStats = [\n    { stat: 'Com', value: overallCombat, color:'bg-danger' },\n    { stat: 'Dur', value: overallDurability, color:'bg-secondary' },\n    { stat: 'Int', value: overallIntelligence, color:'bg-primary' },\n    { stat: 'Pwr', value: overallPower, color:'bg-info' },\n    { stat: 'Spd', value: overallSpeed, color:'bg-success' },\n    { stat: 'Str', value: overallStrength, color:'bg-warning' },\n  ];\n  const sortedTotalStats = totalStats.sort((a, b) => b.value - a.value);\n  return sortedTotalStats;\n};\n","export const getAverageHeight = heroTeam => {\n  let totalHeight = 0;\n  heroTeam.map(hero => (totalHeight += parseInt(hero.appearance.height[1])));\n  let averageHeight = totalHeight / heroTeam.length;\n  return Math.floor(averageHeight);\n};\n","export const getAverageWeight = heroTeam => {\n  let totalWeight = 0;\n  heroTeam.map(hero => (totalWeight += parseInt(hero.appearance.weight[1])));\n  let averageWeight = totalWeight / heroTeam.length;\n  return Math.floor(averageWeight);\n};\n","import React, { useState } from 'react';\nimport { Search } from './Search';\nimport { MyTeam } from './MyTeam';\nexport const Home = () => {\n  const [heroTeam, setHeroTeam] = useState([]);\n  return (\n    <>\n      <MyTeam heroTeam={heroTeam} setHeroTeam={setHeroTeam} />\n      <Search setHeroTeam={setHeroTeam} heroTeam={heroTeam} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\n  const isAuthenticated = localStorage.getItem(\"token\");\n  return (\n    <Route\n      {...restOfProps}\n      render={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Login from '../login/Login';\nimport { Home } from '../Home';\nimport ProtectedRoute from './ProtectedRoute';\n\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <ProtectedRoute exact path='/' component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n","import './App.css'\nimport React from 'react';\nimport { AppRouter } from './components/Routers/AppRouter';\nfunction App() {\n  return (\n    <div className=\"container\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}